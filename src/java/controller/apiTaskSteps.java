/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/JSP_Servlet/Servlet.java to edit this template
 */
package controller;

import com.mysql.cj.xdevapi.DbDoc;
import java.io.IOException;
import java.sql.*;
import java.io.PrintWriter;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.util.*;

/**
 *
 * @author Admin
 */
public class apiTaskSteps extends HttpServlet {

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        String taskId = request.getParameter("task_id");

        response.setContentType("application/json; charset=UTF-8");
        PrintWriter out = response.getWriter();

        if (taskId == null || taskId.trim().isEmpty()) {
            response.setStatus(HttpServletResponse.SC_BAD_REQUEST);
            out.print("{\"error\":\"Missing task_id\"}");
            return;
        }

        try {
            KNCSDL db = new KNCSDL();
            ResultSet rs = db.getStepsRawByTaskId(taskId);

            StringBuilder json = new StringBuilder();
            json.append("[");

            boolean first = true;
            while (rs.next()) {
                if (!first) {
                    json.append(",");
                }
                json.append("{");

                json.append("\"id\":\"").append(escapeJson(rs.getString("id"))).append("\",");
                json.append("\"name\":\"").append(escapeJson(rs.getString("ten_buoc"))).append("\",");
                json.append("\"desc\":\"").append(escapeJson(rs.getString("mo_ta"))).append("\",");
                json.append("\"status\":\"").append(escapeJson(rs.getString("trang_thai"))).append("\",");
                json.append("\"start\":\"").append(escapeJson(rs.getString("ngay_bat_dau"))).append("\",");
                json.append("\"end\":\"").append(escapeJson(rs.getString("ngay_ket_thuc"))).append("\"");

                json.append("}");
                first = false;
            }

            json.append("]");
            out.print(json.toString());

        } catch (Exception e) {
            e.printStackTrace();
            response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
            out.print("[]");
        }
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        request.setCharacterEncoding("UTF-8");
        response.setContentType("text/plain; charset=UTF-8");

        PrintWriter out = response.getWriter();

        String stepIdStr = request.getParameter("step_id");
        String name = request.getParameter("name");
        String desc = request.getParameter("desc");
        String status = request.getParameter("status");
        String start = request.getParameter("start");
        String end = request.getParameter("end");

        if (stepIdStr == null || name == null || status == null) {
            response.setStatus(HttpServletResponse.SC_BAD_REQUEST);
            out.print("Thi·∫øu th√¥ng tin b·∫Øt bu·ªôc.");
            return;
        }

        try {
            int stepId = Integer.parseInt(stepIdStr);

            KNCSDL db = new KNCSDL();
            
            // L·∫•y th√¥ng tin ti·∫øn ƒë·ªô c≈© ƒë·ªÉ so s√°nh
            Map<String, Object> stepCu = db.getStepById(stepId);
            
            boolean success = db.updateStepById(stepId, name, desc, status, start, end);

            if (success) {
                db = new KNCSDL();
                int congviecId = db.getCongViecIdByBuocId(stepId);
                String tencv = db.getTenCongViecById(congviecId);
                List<Integer> danhSachNguoiNhan = db.getDanhSachNguoiNhanId(congviecId);

                String tieuDeTB = "C·∫≠p nh·∫≠t quy tr√¨nh";
                String noiDungTB = "C√¥ng vi·ªác: " + tencv + " v·ª´a ƒë∆∞·ª£c c·∫≠p nh·∫≠t quy tr√¨nh m·ªõi";

                for (int nhanId : danhSachNguoiNhan) {
                    db.insertThongBao(nhanId, tieuDeTB, noiDungTB, "C·∫≠p nh·∫≠t");
                }
                
                // Ghi log l·ªãch s·ª≠ CHI TI·∫æT t·ª´ng tr∆∞·ªùng
                jakarta.servlet.http.HttpSession session = request.getSession(false);
                int userId = 0;
                if (session != null && session.getAttribute("userId") != null) {
                    try {
                        userId = Integer.parseInt(session.getAttribute("userId").toString());
                    } catch (Exception e) {}
                }
                
                if (userId > 0 && stepCu != null) {
                    java.util.List<String> thayDoiList = new java.util.ArrayList<>();
                    
                    // So s√°nh t√™n ti·∫øn ƒë·ªô
                    String tenCu = (String) stepCu.get("ten_buoc");
                    if (!safeStringEquals(tenCu, name)) {
                        thayDoiList.add("üìù ƒê·ªïi t√™n ti·∫øn ƒë·ªô: '" + (tenCu != null ? tenCu : "(tr·ªëng)") + "' ‚Üí '" + name + "'");
                    }
                    
                    // So s√°nh m√¥ t·∫£
                    String moTaCu = (String) stepCu.get("mo_ta");
                    if (!safeStringEquals(moTaCu, desc)) {
                        thayDoiList.add("ÔøΩ C·∫≠p nh·∫≠t m√¥ t·∫£ ti·∫øn ƒë·ªô");
                    }
                    
                    // So s√°nh tr·∫°ng th√°i
                    String trangThaiCu = (String) stepCu.get("trang_thai");
                    if (!safeStringEquals(trangThaiCu, status)) {
                        thayDoiList.add("üîÑ ƒê·ªïi tr·∫°ng th√°i ti·∫øn ƒë·ªô: '" + (trangThaiCu != null ? trangThaiCu : "?") + "' ‚Üí '" + status + "'");
                    }
                    
                    // So s√°nh ng√†y b·∫Øt ƒë·∫ßu
                    String ngayBDCu = (String) stepCu.get("ngay_bat_dau");
                    if (!safeStringEquals(ngayBDCu, start)) {
                        thayDoiList.add("üìÖ ƒê·ªïi ng√†y b·∫Øt ƒë·∫ßu: '" + (ngayBDCu != null ? ngayBDCu : "(ch∆∞a c√≥)") + "' ‚Üí '" + (start != null && !start.isEmpty() ? start : "(ch∆∞a c√≥)") + "'");
                    }
                    
                    // So s√°nh ng√†y k·∫øt th√∫c
                    String ngayKTCu = (String) stepCu.get("ngay_ket_thuc");
                    if (!safeStringEquals(ngayKTCu, end)) {
                        thayDoiList.add("üìÖ ƒê·ªïi deadline ti·∫øn ƒë·ªô: '" + (ngayKTCu != null ? ngayKTCu : "(ch∆∞a c√≥)") + "' ‚Üí '" + (end != null && !end.isEmpty() ? end : "(ch∆∞a c√≥)") + "'");
                    }
                    
                    // Ghi log n·∫øu c√≥ thay ƒë·ªïi
                    if (!thayDoiList.isEmpty()) {
                        String logMsg = "üîß [Ti·∫øn ƒë·ªô: " + name + "] " + String.join(" | ", thayDoiList);
                        db.themLichSuCongViec(congviecId, userId, logMsg);
                    }
                }

                response.setStatus(HttpServletResponse.SC_OK);

            } else {
                response.setStatus(HttpServletResponse.SC_NOT_FOUND);
                out.print("Kh√¥ng t√¨m th·∫•y b∆∞·ªõc ƒë·ªÉ c·∫≠p nh·∫≠t.");
            }

        } catch (Exception e) {
            e.printStackTrace();
            response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
            out.print("L·ªói m√°y ch·ªß: " + e.getMessage());
        }
    }

    // Escape chu·ªói JSON th·ªß c√¥ng
    private String escapeJson(String value) {
        if (value == null) {
            return "";
        }
        return value.replace("\"", "\\\"")
                .replace("\n", "")
                .replace("\r", "");
    }
    
    // Helper method ƒë·ªÉ so s√°nh an to√†n 2 chu·ªói
    private boolean safeStringEquals(String a, String b) {
        if (a == null && b == null) return true;
        if (a == null || b == null) return false;
        return a.trim().equals(b.trim());
    }

    @Override
    public String getServletInfo() {
        return "Short description";
    }// </editor-fold>

}
